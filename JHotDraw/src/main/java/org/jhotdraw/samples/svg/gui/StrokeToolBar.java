/*
 * @(#)StrokeToolBar.java  1.2  2008-05-23
 *
 * Copyright (c) 2007-2008 by the original authors of JHotDraw
 * and all its contributors.
 * All rights reserved.
 *
 * The copyright of this software is owned by the authors and  
 * contributors of the JHotDraw project ("the copyright holders").  
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * the copyright holders. For details see accompanying license terms. 
 */
package org.jhotdraw.samples.svg.gui;

import dk.sdu.mmmi.featuretracer.lib.FeatureEntryPoint;
import org.jhotdraw.text.JavaNumberFormatter;
import javax.swing.border.*;
import org.jhotdraw.gui.*;
import org.jhotdraw.gui.plaf.palette.*;
import org.jhotdraw.util.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;
import javax.swing.plaf.SliderUI;
import org.jhotdraw.app.JHotDrawFeatures;
import org.jhotdraw.draw.*;
import org.jhotdraw.draw.action.*;
import org.jhotdraw.text.ColorFormatter;
import static org.jhotdraw.samples.svg.SVGAttributeKeys.*;
import org.jhotdraw.samples.svg.gui.buttons.*;

/**
 * StrokeToolBar.
 *
 * @author Werner Randelshofer
 * @version 1.2 2008-05-23 Hide the toolbar if nothing is selected, and no
 * creation tool is active.
 * <br>1.1 2008-03-26 Don't draw button borders.
 * <br>1.0 May 1, 2007 Created.
 */
public class StrokeToolBar extends GenericToolBar {

    private SelectionComponentDisplayer displayer;

    /**
     * Creates new instance.
     */
    public StrokeToolBar() {
        super.init("stroke", "stroke.toolbar", "org.jhotdraw.samples.svg.Labels", 1, new CompositeToolBarElement(),
                new CompositeToolBarElement(
                        new StrokeColorToolBarElement(),
                        new StrokeOpacityToolBarElement(),
                        new StrokeWidthToolBarElement(),
                        new StrokeJoinToolBarElement(),
                        new StrokeCapToolBarElement(),
                        new StrokeDashesToolBarElement()
                ),
                new CompositeToolBarElement(
                        new ExtendedStrokeColorToolBarElement(),
                        new ExtendedStrokeOpacityToolBarElement(),
                        new ExtendedStrokeWidthToolBarElement(),
                        new StrokeJoinToolBarElement(),
                        new StrokeCapToolBarElement(),
                        new ExtendedStrokeDashesToolBarElement()
                ),
                new CompositeToolBarElement(
                        new StrokeJoinToolBarElement(),
                        new StrokeCapToolBarElement(),
                        new ExtendedStrokeDashesToolBarElement(),
                        new StrokeJoinToolBarElement(),
                        new StrokeJoinToolBarElement(),
                        new StrokeJoinToolBarElement()
                )
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setOpaque(false);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
